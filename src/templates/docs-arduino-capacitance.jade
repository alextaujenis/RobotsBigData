doctype html
html(lang='en')
  head
    title Robots + Big Data: Arduino Capacitance Docs
    meta(name="description", content="An Arduino library for measuring relative capacitance and calculating a moving average result.")
    include ./global/head-content.jade
  body
    include ./global/top-nav.jade
    .container-fluid
      .row
        .hidden-xs.col-sm-4.stuck
          include ./global/docs-side-nav.jade
        .documentation.col-sm-8
          .breadcrumb-container.stuck
            ol.breadcrumb
              li
                a(href="index.html") Home
              li
                a(href="docs-arduino.html") Arduino
              li.active(translate="no")
                | Capacitance
            .breadcrumb-icons.pull-right
              .icon-container.pull-right
                a(href="https://github.com/alextaujenis/RBD_Capacitance")
                  .icon
                    .image
                      img(src='assets/images/github-logo.png', alt="GitHub Logo")
                    .text-container
                      .name View Source on GitHub
                      .subtitle With MIT License
              .icon-container.pull-right.download-button(data-toggle="tooltip", data-placement="bottom", title="Click to download the Capacitance library")
                a.ga-events(href="assets/downloads/RBD_Capacitance.zip", data-name="RBD_Capacitance.zip")
                  .icon
                    .image
                      img(src='assets/images/zip-icon.png', alt=".zip icon")
                    .text-container
                      .name RBD_Capacitance.zip
                      .subtitle 4KB Download
              .clearfix
            .clearfix
          .jumbotron
            .click-through
              .row.jumbotron-header.click-through
                .col-xs-12.text-right.click-through
                  span.label.label-info.title-label Arduino
            .jumbotron-container
              h2(translate="no")
                | Capacitance
                small(translate="yes") API DOCUMENTATION
              p#RBD_Capacitance
                | Measure change in capacitance.
                small.version
              a.btn.btn-primary(href="#example-wiring") See Example
              | &nbsp;&nbsp;
              a.btn.btn-default(href="#public-methods") Public Methods
              | &nbsp;&nbsp;
              a.btn.btn-default(href="https://github.com/alextaujenis/RBD_Capacitance/releases") Release Notes

          .h3
            #overview.anchor
            | Overview
          p.lead
            | Detect human presence and touch from behind several millimeters of material, or detect change in water levels from the outside of a plastic container. This library is meant to help&nbsp;
            b determine change in relative capacitance
            |  for the reasons above, and not for calculating exact capacitance.
          p.lead
            | Relative capacitance is found by measuring how long it takes for an Arduino send-pin to charge a receive-pin to HIGH (in microseconds). Changes in the electrical field around a sensor connected to the receive pin (such as a human passing by, or water filling up, or a motor turning on) have a measurable impact on the amount of time it takes to charge the receive pin.
          p.lead
            | Many of these charge and discharge readings are taken, then averaged within the library to reduce variability and give a more clear answer of what the sensor is reading. This is done without delay so it only has a small impact on the main loop() performance. See the&nbsp;
            a(href="#example-wiring") Example
            |  below for help wiring and programming the Arduino with this library.

          .h3
            #example-wiring.anchor
            | Example Wiring
          ol
            li
              | Connect Arduino&nbsp;
              span.blue-wire digital pin 2
              |  to a&nbsp;
              b 10Meg&#8486; resistor
            li
              | Connect the other end of the&nbsp;
              b 10Meg&#8486; resistor
              |  to Arduino&nbsp;
              span.control-wire digital pin 3
            li
              | Connect Arduino&nbsp;
              span.control-wire digital pin 3
              |  to a piece of conductive material (aluminum foil)
            li
              | Cover the conductive material with non-conductive material (tape)
            li
              | Load the&nbsp;
              a(href="#example-sketch") Example Sketch
              |  onto the Arduino
            li Open a serial connection at 115200 baud to see the reported values
            li Touch or move your hand by the sensor
          p
            img.img-responsive(src="assets/images/arduino-capacitance-wiring-diagram.png", alt="A piece of aluminum foil connected to a 10 Meg Ohm resistor that is bridged across Arduino digital pins 2 and 3.")

          .h3
            #example-sketch.anchor
            | Example Sketch
            span.label.label-info Arduino
            span.label.label-primary C++

          div(translate="no")
            script(type="syntaxhighlighter", class="brush: arduino; gutter: false;")
              :cdata
                #include <RBD_Capacitance.h>

                RBD::Capacitance cap_sensor(2, 3); // send, receive pins

                void setup() {
                  Serial.begin(115200);
                }

                void loop() {
                  cap_sensor.update();

                  if(cap_sensor.onChange()) {
                    Serial.println(cap_sensor.getValue());
                  }
                }

          .h3
            #sensitivity.anchor
            | Sensitivity
          p Sensitivity is how far away the sensor can detect things, or how much resolution you have to recognize change in the sensor readings.
          ul
            li
              b Increase Sensitivity
              |  by&nbsp;
              i either
              |  adding more resistors in series (20Meg, 30Meg, or more),&nbsp;
              i or
              |  increase the surface area (size) of the piece of aluminum used as the sensor.

            li
              b Decrease Sensitivity
              |  by&nbsp;
              i either
              |  lowering the amount of resitance (use only 1Meg or less),&nbsp;
              i or
              |  decrease the surface area (size) of the piece of aluminum used as the sensor.

          .h3
            #variability.anchor
            | Variability
          p Variability is how wildly the sensor readings fluctuate. This library helps adjust the variability by taking a moving average of many readings over time. This is done without delay so it has little impact on the main loop() performance.
          ul
            li
              b Less Variable
              |  readings that don't fluctuate so quickly can be achieved by increasing the sample size:&nbsp;
              a.click-flash(href="#setsamplesize", translate="no") setSampleSize(1000)
              | .

            li
              b More Variable
              |  readings that fluctuate quickly can be achieved by decreasing the sample size:&nbsp;
              a.click-flash(href="#setsamplesize", translate="no") setSampleSize(10)
              | .

          .h3
            #public-methods.anchor
            | Public Methods

          p
            | You must continuously call&nbsp;
            a.click-flash(href="#update", translate="no") update()
            |  inside of loop() in order to use the
            span.label.label-success Real-Time
            |  methods tagged below.

          h4.class-name(translate="no")
            script(type="syntaxhighlighter", class="brush: arduino; gutter: false;")
              :cdata
                RBD::Capacitance

          ul.public-methods(translate="no")
            li
              a.click-flash(href="#constructor") constructor(send_pin, receive_pin)
            li.divider
            li
              a.click-flash(href="#setsamplesize") .setSampleSize(value)
            li.divider
            li
              a.click-flash(href="#update") .update()
              include ./global/labels/update.jade
            li
              a.click-flash(href="#start") .start()
              include ./global/labels/real-time.jade
            li
              a.click-flash(href="#isfinished") .isFinished()
              include ./global/labels/real-time.jade
            li
              a.click-flash(href="#getvalue") .getValue()
              include ./global/labels/real-time.jade
            li.divider
            li
              a.click-flash(href="#onchange") .onChange()
              include ./global/labels/real-time.jade
              include ./global/labels/event.jade

          .section
            .method-name(translate="no")
              #constructor.anchor
              | RBD::Capacitance constructor(send_pin, receive_pin)
            p Create a new capacitance sensor and pass in the Arduino pin numbers for the send and receive pins.
            h5
              | EXAMPLE&nbsp;
              span(translate="no") SKETCH
            div(translate="no")
              script(type="syntaxhighlighter", class="brush: arduino; gutter: false;")
                :cdata
                  RBD::Capacitance cap_sensor(2 ,3);

                  void setup() {
                    ...
                  }

          .section
            .method-name(translate="no")
              #setsamplesize.anchor
              .light cap_sensor
              | .setSampleSize(value)
            p
              | Pass in an integer to change the number of readings taken to calculate a moving average&nbsp;
              a.click-flash(href="#getvalue", translate="no") getValue()
              | . This can be called inside of setup() or also safely at runtime inside of loop().
            ul
              li
                b Decrease Variation
                |  in readings by making this number larger: 1000
              li
                b Increase Variation
                |  in readings by making this number smaller: 10
              li
                b Default Value
                | : 100
            h5
              | EXAMPLE&nbsp;
              span(translate="no") SKETCH
            div(translate="no")
              script(type="syntaxhighlighter", class="brush: arduino; gutter: false;")
                :cdata
                  void setup() {
                    cap_sensor.setSampleSize(1000);
                  }

          .section
            .method-name(translate="no")
              #update.anchor
              .light cap_sensor
              | .update()
              include ./global/labels/update.jade
            p This must be call continuously from within the loop() to move the library along in real-time.
            h5
              | EXAMPLE&nbsp;
              span(translate="no") SKETCH
            div(translate="no")
              script(type="syntaxhighlighter", class="brush: arduino; gutter: false;")
                :cdata
                  void loop() {
                    cap_sensor.update();
                  }

          .section
            .method-name(translate="no")
              #start.anchor
              .light cap_sensor
              | .start()
              include ./global/labels/real-time.jade
            p
              | Begin taking many readings and start adding up the moving average for&nbsp;
              a.click-flash(href="#getvalue", translate="no") getValue()
              | .
            h5
              | EXAMPLE&nbsp;
              span(translate="no") SKETCH
            div(translate="no")
              script(type="syntaxhighlighter", class="brush: arduino; gutter: false;")
                :cdata
                  void setup() {
                    cap_sensor.start();
                  }

                  void loop() {
                    cap_sensor.update();
                  }

          .section
            .method-name(translate="no")
              #isfinished.anchor
              .light cap_sensor
              | .isFinished()
              include ./global/labels/real-time.jade
            p
              | Returns true if all readings have been taken and a moving average&nbsp;
              a.click-flash(href="#getvalue", translate="no") getValue()
              |  is ready. You must first call&nbsp;
              a.click-flash(href="#start", translate="no") start()
              |   to begin the sampling process.
            h5
              | EXAMPLE&nbsp;
              span(translate="no") SKETCH
            div(translate="no")
              script(type="syntaxhighlighter", class="brush: arduino; gutter: false;")
                :cdata
                  void setup() {
                    cap_sensor.start();
                  }

                  void loop() {
                    cap_sensor.update();

                    if(cap_sensor.isFinished()) {
                      ...
                    }
                  }

          .section
            .method-name(translate="no")
              #getvalue.anchor
              .light cap_sensor
              | .getValue()
              include ./global/labels/real-time.jade
            p
              | Returns an unsigned long of the moving average value for the capacitance reading (microseconds taken to charge the pin). This will only return a value after calling&nbsp;
              a.click-flash(href="#start", translate="no") start()
              |  and waiting until&nbsp;
              a.click-flash(href="#isfinished", translate="no") isFinished()
              |  has returned true.
            h5
              | EXAMPLE&nbsp;
              span(translate="no") SKETCH
            div(translate="no")
              script(type="syntaxhighlighter", class="brush: arduino; gutter: false;")
                :cdata
                  void setup() {
                    cap_sensor.start();
                  }

                  void loop() {
                    cap_sensor.update();

                    if(cap_sensor.isFinished()) {
                      Serial.println(cap_sensor.getValue());
                    }
                  }

          .section
            .method-name(translate="no")
              #onchange.anchor
              .light cap_sensor
              | .onChange()
              include ./global/labels/real-time.jade
              include ./global/labels/event.jade
            p
              | This method will fire a single event and start taking another sensor reading each time the&nbsp;
              a.click-flash(href="#getvalue", translate="no") getValue()
              |  changes, mimicking the same process of creating a loop by calling&nbsp;
              a.click-flash(href="#start", translate="no") start()
              |  and&nbsp;
              a.click-flash(href="#isfinished", translate="no") isFinished()
              |  together, but with a simple syntax and a tighter time loop.
            h5
              | EXAMPLE&nbsp;
              span(translate="no") SKETCH
            div(translate="no")
              script(type="syntaxhighlighter", class="brush: arduino; gutter: false;")
                :cdata
                  void loop() {
                    cap_sensor.update();

                    if(cap_sensor.onChange()) {
                      // code only runs once per event
                      Serial.println(cap_sensor.getValue());
                    }
                  }

          .bottom-nav.hidden.visible-xs-block
            include ./global/docs-side-nav.jade

    #modal.modal.fade(tabindex='-1', role='dialog')
      .modal-dialog.modal-lg
        .modal-content
          .modal-header
            button.close(type='button', data-dismiss='modal', aria-label='Close')
              span(aria-hidden='true') x
            h4#modalLabel.modal-title Library Installation
          .modal-body
            .install-step
              h3 Step 1
              p.lead
                | Check your downloads folder and double-click the&nbsp;
                img(src="src/images/zip-icon.png", alt=".zip icon")
                |  RBD_Capacitance.zip file.
            .install-step
              h3 Step 2
              p.lead
                | Move the&nbsp;
                img(src="src/images/folder-icon.png", alt="folder icon")
                |   RBD_Capacitance folder to the Arduino&nbsp;
                img(src="src/images/folder-icon.png", alt="folder icon")
                |  libraries folder:
              h5 INSTALL PATH
              div(translate="no")
                script(type="syntaxhighlighter", class="brush: shell; gutter: false;")
                  :cdata
                    Windows:       My Documents\Arduino\libraries
                    Mac & Linux:   Documents/Arduino/libraries

                h5 FOLDER STRUCTURE
                .image
                  img(src="assets/images/install-folder-structure-documents.png", alt="Documents/Arduino/Libraries")
                .image
                  img(src="assets/images/install-folder-structure-capacitance.png", alt="RBD_Capacitance")
            .install-step
              h3 Step 3
              p.lead
                | Upgrade to&nbsp;
                a(href="https://www.arduino.cc/en/Main/Software") Arduino IDE v1.5 or greater
                |  and load the&nbsp;
                a.close-modal(href="#example-sketch") Example Sketch
                |  to get started.
          .modal-footer
            button.btn.btn-default(type='button', data-dismiss='modal') Close

    include ./global/footer.jade
    include ./global/foot-content.jade
    include ./global/docs-foot-content.jade
    script.
      $(document).ready(function(){
        (new GithubRepo({
          user: "alextaujenis",
          repo: "RBD_Capacitance"
        })).render();
      });
