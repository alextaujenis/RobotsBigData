doctype html
html(lang='en')
  head
    title Robots + Big Data: Arduino Threshold Docs
    meta(name="description", content="An Arduino library to set and check numeric quantile scales with non-uniform input ranges.")
    include ./global/head-content.jade
  body
    include ./global/top-nav.jade
    .container-fluid
      .row
        .hidden-xs.col-sm-4.stuck
          include ./global/docs-side-nav.jade
        .documentation.col-sm-8
          .breadcrumb-container.stuck
            ol.breadcrumb
              li
                a(href="index.html") Home
              li
                a(href="docs-arduino.html") Arduino
              li.active(translate="no")
                | Threshold
            .breadcrumb-icons.pull-right
              .icon-container.pull-right
                a(href="https://github.com/alextaujenis/RBD_Threshold")
                  .icon
                    .image
                      img(src='assets/images/github-logo.png', alt="GitHub Logo")
                    .text-container
                      .name View Source on GitHub
                      .subtitle With MIT License
              .icon-container.pull-right.download-button(data-toggle="tooltip", data-placement="bottom", title="Click to download the Threshold library")
                a(href="assets/downloads/RBD_Threshold.zip")
                  .icon
                    .image
                      img(src='assets/images/zip-icon.png', alt=".zip icon")
                    .text-container
                      .name RBD_Threshold.zip
                      .subtitle 9KB Download
              .clearfix
            .clearfix
          .jumbotron
            .stuck.click-through
              .row.jumbotron-header.click-through
                .col-xs-12.text-right.click-through
                  span.label.label-info.title-label Arduino
            .jumbotron-container
              h2(translate="no")
                | Threshold
                small(translate="no") API DOCUMENTATION
              p
                | Set and check numeric quantile scales.
                small v1.0.2
              a.btn.btn-primary(href="#example-setup") See Example
              | &nbsp;&nbsp;
              a.btn.btn-default(href="#public-methods") Public Methods
              | &nbsp;&nbsp;
              a.btn.btn-default(href="https://github.com/alextaujenis/RBD_Threshold/releases") Release Notes
          .h3
            #overview.anchor
            | Overview
          p.lead
            | Set and check numeric quantile scales. Provide an input domain and this library will convert it to a numeric quantile output range. This is different from the Arduino map() function because this library can handle a non-uniform input range.

          .h3
            #example-setup.anchor
            | Example Setup
          ul
            li Install this library and load the example sketch onto an Arduino
            li Open a serial connection at 115200 baud
            li Watch as converted values are printed to serial output
          p
            | This example takes an input domain of:
          ul
            li [under 0]
            li [0 - 10.49]
            li [10.5 - 19.99]
            li [20 - 30]
            li [over 30]
          p
            | and converts it to the quantile output range:
          ol(start="0")
            li UNDER
            li LOW
            li MEDIUM
            li HIGH
            li OVER

          .h3
            #example-sketch.anchor
            | Example Sketch
            span.label.label-info Arduino
            span.label.label-primary C++
          div(translate="no")
            script(type="syntaxhighlighter", class="brush: arduino; gutter: false;")
              :cdata
                #include <RBD_Threshold.h>

                RBD::Threshold threshold(3); // 3 levels

                void setup() {
                  Serial.begin(115200);
                  threshold.setLevel(1,0);    // low
                  threshold.setLevel(2,10.5); // medium
                  threshold.setLevel(3,20);   // high
                  threshold.setMaxLevel(30);  // max
                }

                void loop() {
                  Serial.println(threshold.computeLevel(-1));   // 0 under
                  Serial.println(threshold.computeLevel(8));    // 1 low
                  Serial.println(threshold.computeLevel(10.6)); // 2 medium
                  Serial.println(threshold.computeLevel(30));   // 3 high
                  Serial.println(threshold.computeLevel(31));   // 4 over
                }

          .h3
            #public-methods.anchor
            | Public Methods
          h4.class-name(translate="no")
            script(type="syntaxhighlighter", class="brush: arduino; gutter: false;")
              :cdata
                RBD::Threshold

          ul.public-methods(translate="no")
            li
              a.click-flash(href="#constructor") constructor(level_count)
            li.divider
            li
              a.click-flash(href="#setlevel") .setLevel(index, value)
            li
              a.click-flash(href="#setmaxlevel") .setMaxLevel(value)
            li.divider
            li
              a.click-flash(href="#getlevel") .getLevel(index)
            li
              a.click-flash(href="#getmaxlevel") .getMaxLevel()
            li.divider
            li
              a.click-flash(href="#computelevel") .computeLevel(value)

          .section
            .method-name(translate="no")
              #constructor.anchor
              | RBD::Threshold constructor(level_count)
            p Create a new instance and provide an integer for the maximum number of threshold levels. For example; set the level_count to 3 if you have levels of low, medium, and high. If you need more levels, this library will dynamically allocate an array to accommodate the size you provide the constructor.
            h5
              | EXAMPLE&nbsp;
              span(translate="no") SKETCH
            div(translate="no")
              script(type="syntaxhighlighter", class="brush: arduino; gutter: false;")
                :cdata
                  RBD::Threshold threshold(3) // 3 levels

                  void setup() {
                    ...
                  }

          .section
            .method-name(translate="no")
              #setlevel.anchor
              .light threshold
              | .setLevel(index, value)
            p
              | Provide an integer for a level index and an integer, float, or double for the threshold value. This is not zero based, the first level starts at 1. You must also call&nbsp;
              a.click-flash(href="#setmaxlevel", translate="no") setMaxLevel()
              |  at the end to set an upper bounds of your last level.
            h5
              | EXAMPLE&nbsp;
              span(translate="no") SKETCH
            div(translate="no")
              script(type="syntaxhighlighter", class="brush: arduino; gutter: false;")
                :cdata
                  void setup() {
                    threshold.setLevel(1,0);    // [0 - 10.49]
                    threshold.setLevel(2,10.5); // [10.5 - 19.99]
                    threshold.setLevel(3,20);   // [20 - max]
                  }

          .section
            .method-name(translate="no")
              #setmaxlevel.anchor
              .light threshold
              | .setMaxLevel(value)
            p Provide an integer, float, or double to set the upper-bounds threshold of the last level.
            h5
              | EXAMPLE&nbsp;
              span(translate="no") SKETCH
            div(translate="no")
              script(type="syntaxhighlighter", class="brush: arduino; gutter: false;")
                :cdata
                  void setup() {
                    threshold.setMaxLevel(30); // [max = 30]
                  }

          .section
            .method-name(translate="no")
              #getlevel.anchor
              .light threshold
              | .getLevel(index)
            p
              | Provide an integer for the level index, and this returns the value originally provided to&nbsp;
              a.click-flash(href="#setlevel", translate="no") setLevel()
              | .
            h5
              | EXAMPLE&nbsp;
              span(translate="no") SKETCH
            div(translate="no")
              script(type="syntaxhighlighter", class="brush: arduino; gutter: false;")
                :cdata
                  void loop() {
                    Serial.println(threshold.getLevel(3); // returns 20
                  }

          .section
            .method-name(translate="no")
              #getmaxlevel.anchor
              .light threshold
              | .getMaxLevel()
            p
              | Returns the value originally provided to&nbsp;
              a.click-flash(href="#setmaxlevel", translate="no") setMaxLevel()
              | .
            h5
              | EXAMPLE&nbsp;
              span(translate="no") SKETCH
            div(translate="no")
              script(type="syntaxhighlighter", class="brush: arduino; gutter: false;")
                :cdata
                  void loop() {
                    Serial.println(threshold.getMaxLevel()); // returns 30
                  }

          .section
            .method-name(translate="no")
              #computelevel.anchor
              .light threshold
              | .computeLevel(value)
            p
              | Provide an integer, float, or double value to compare against the thresholds for&nbsp;
              a.click-flash(href="#setlevel", translate="no") setLevel()
              |  and&nbsp;
              a.click-flash(href="#setmaxlevel", translate="no") setMaxLevel()
              | . This returns an integer for the computed level.
            ul
              li it returns 0 for values that are under the first level
              li 1 for your first level
              li 2 for your second level
              li n for your nth level
              li
                | sizeof(n) + 1 for any value greater than&nbsp;
                a.click-flash(href="#getmaxlevel", translate="no") getMaxLevel()
              li -1 if the value was not found
            h5
              | EXAMPLE&nbsp;
              span(translate="no") SKETCH
            div(translate="no")
              script(type="syntaxhighlighter", class="brush: arduino; gutter: false;")
                :cdata
                  void loop() {
                    Serial.println(threshold.computeLevel(17)); // returns 2 (medium)
                  }

          .bottom-nav.hidden.visible-xs-block
            include ./global/docs-side-nav.jade

    #modal.modal.fade(tabindex='-1', role='dialog')
      .modal-dialog.modal-lg
        .modal-content
          .modal-header
            button.close(type='button', data-dismiss='modal', aria-label='Close')
              span(aria-hidden='true') x
            h4#modalLabel.modal-title Library Installation
          .modal-body
            .install-step
              h3 Step 1
              p.lead
                | Check your downloads folder and double-click the&nbsp;
                img(src="src/images/zip-icon.png", alt=".zip icon")
                |  RBD_Threshold.zip file.
            .install-step
              h3 Step 2
              p.lead
                | Move the&nbsp;
                img(src="src/images/folder-icon.png", alt="folder icon")
                |   RBD_Threshold folder to the Arduino&nbsp;
                img(src="src/images/folder-icon.png", alt="folder icon")
                |  libraries folder:
              h5 INSTALL PATH
              div(translate="no")
                script(type="syntaxhighlighter", class="brush: shell; gutter: false;")
                  :cdata
                    Mac & Linux:   Documents/Arduino/libraries
                    Windows:       My Documents\Arduino\libraries

                h5 FOLDER STRUCTURE
                .image
                  img(src="assets/images/install-folder-structure-documents.png", alt="Documents/Arduino/Libraries")
                .image
                  img(src="assets/images/install-folder-structure-threshold.png", alt="RBD_Threshold")
            .install-step
              h3 Step 3
              p.lead
                | Upgrade to&nbsp;
                a(href="https://www.arduino.cc/en/Main/Software") Arduino IDE v1.5 or greater
                |  and load the&nbsp;
                a.close-modal(href="#example-sketch") Example Sketch
                |  to get started.
          .modal-footer
            button.btn.btn-default(type='button', data-dismiss='modal') Close

    include ./global/footer.jade
    include ./global/foot-content.jade
    include ./global/docs-foot-content.jade